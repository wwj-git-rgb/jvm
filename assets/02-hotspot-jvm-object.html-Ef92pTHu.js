import{_ as a,c as o,a as t,o as s}from"./app-BbxH2Yoy.js";const l={};function n(i,e){return s(),o("div",null,e[0]||(e[0]=[t('<h1 id="hotspot-虚拟机对象探秘" tabindex="-1"><a class="header-anchor" href="#hotspot-虚拟机对象探秘"><span>HotSpot 虚拟机对象探秘</span></a></h1><h2 id="对象的内存布局" tabindex="-1"><a class="header-anchor" href="#对象的内存布局"><span>对象的内存布局</span></a></h2><p>在 HotSpot 虚拟机中，对象的内存布局分为以下 3 块区域：</p><ul><li>对象头（Header）</li><li>实例数据（Instance Data）</li><li>对齐填充（Padding）</li></ul><p><img src="https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/jvm@main/images/object-memory-layout.png" alt="object-memory-layout.png"></p><h3 id="对象头" tabindex="-1"><a class="header-anchor" href="#对象头"><span>对象头</span></a></h3><p>对象头记录了对象在运行过程中所需要使用的一些数据：</p><ul><li>哈希码</li><li>GC 分代年龄</li><li>锁状态标志</li><li>线程持有的锁</li><li>偏向线程 ID</li><li>偏向时间戳</li></ul><p>对象头可能包含类型指针，通过该指针能确定对象属于哪个类。如果对象是一个数组，那么对象头还会包括数组长度。</p><h3 id="实例数据" tabindex="-1"><a class="header-anchor" href="#实例数据"><span>实例数据</span></a></h3><p>实例数据部分就是成员变量的值，其中包括父类成员变量和本类成员变量。</p><h3 id="对齐填充" tabindex="-1"><a class="header-anchor" href="#对齐填充"><span>对齐填充</span></a></h3><p>用于确保对象的总长度为 8 字节的整数倍。</p><p>HotSpot VM 的自动内存管理系统要求对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</p><blockquote><p>对齐填充并不是必然存在，也没有特别的含义，它仅仅起着占位符的作用。</p></blockquote><h2 id="对象的创建过程" tabindex="-1"><a class="header-anchor" href="#对象的创建过程"><span>对象的创建过程</span></a></h2><p><img src="https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/jvm@main/images/new-instruction.png" alt="new-instruction"></p><h3 id="类加载检查" tabindex="-1"><a class="header-anchor" href="#类加载检查"><span>类加载检查</span></a></h3><p>虚拟机在解析<code>.class</code>文件时，若遇到一条 new 指令，首先它会去检查常量池中是否有这个类的符号引用，并且检查这个符号引用所代表的类是否已被加载、解析和初始化过。如果没有，那么必须先执行相应的类加载过程。</p><h3 id="为新生对象分配内存" tabindex="-1"><a class="header-anchor" href="#为新生对象分配内存"><span>为新生对象分配内存</span></a></h3><p>对象所需内存的大小在类加载完成后便可完全确定，接下来从堆中划分一块对应大小的内存空间给新的对象。分配堆中内存有两种方式：</p><ul><li><p><strong>指针碰撞</strong><br> 如果 Java <strong>堆中内存绝对规整</strong>（说明采用的是“<strong>复制算法</strong>”或“<strong>标记整理法</strong>”），空闲内存和已使用内存中间放着一个指针作为分界点指示器，那么分配内存时只需要把指针向空闲内存挪动一段与对象大小一样的距离，这种分配方式称为“<strong>指针碰撞</strong>”。</p></li><li><p><strong>空闲列表</strong><br> 如果 Java <strong>堆中内存并不规整</strong>，已使用的内存和空闲内存交错（说明采用的是<strong>标记-清除法</strong>，有碎片），此时没法简单进行指针碰撞， VM 必须维护一个列表，记录其中哪些内存块空闲可用。分配之时从空闲列表中找到一块足够大的内存空间划分给对象实例。这种方式称为“<strong>空闲列表</strong>”。</p></li></ul><h3 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h3><p>分配完内存后，为对象中的成员变量赋上初始值，设置对象头信息，调用对象的构造函数方法进行初始化。</p><p>至此，整个对象的创建过程就完成了。</p><h2 id="对象的访问方式" tabindex="-1"><a class="header-anchor" href="#对象的访问方式"><span>对象的访问方式</span></a></h2><p>所有对象的存储空间都是在堆中分配的，但是这个对象的引用却是在堆栈中分配的。也就是说在建立一个对象时两个地方都分配内存，在堆中分配的内存实际建立这个对象，而在堆栈中分配的内存只是一个指向这个堆对象的指针（引用）而已。 那么根据引用存放的地址类型的不同，对象有不同的访问方式。</p><h3 id="句柄访问方式" tabindex="-1"><a class="header-anchor" href="#句柄访问方式"><span>句柄访问方式</span></a></h3><p>堆中需要有一块叫做“句柄池”的内存空间，句柄中包含了对象实例数据与类型数据各自的具体地址信息。</p><p>引用类型的变量存放的是该对象的句柄地址（reference）。访问对象时，首先需要通过引用类型的变量找到该对象的句柄，然后根据句柄中对象的地址找到对象。</p><p><img src="https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/jvm@main/images/handle-access.jpg" alt="handle-access"></p><h3 id="直接指针访问方式" tabindex="-1"><a class="header-anchor" href="#直接指针访问方式"><span>直接指针访问方式</span></a></h3><p>引用类型的变量直接存放对象的地址，从而不需要句柄池，通过引用能够直接访问对象。但对象所在的内存空间需要额外的策略存储对象所属的类信息的地址。</p><p><img src="https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/jvm@main/images/direct-pointer.jpg" alt="direct-pointer"></p><p>需要说明的是，HotSpot 采用第二种方式，即直接指针方式来访问对象，只需要一次寻址操作，所以在性能上比句柄访问方式快一倍。但像上面所说，它需要<strong>额外的策略</strong>来存储对象在方法区中类信息的地址。</p>',35)]))}const m=a(l,[["render",n]]),h=JSON.parse('{"path":"/02-hotspot-jvm-object.html","title":"HotSpot 虚拟机对象探秘","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"对象的内存布局","slug":"对象的内存布局","link":"#对象的内存布局","children":[{"level":3,"title":"对象头","slug":"对象头","link":"#对象头","children":[]},{"level":3,"title":"实例数据","slug":"实例数据","link":"#实例数据","children":[]},{"level":3,"title":"对齐填充","slug":"对齐填充","link":"#对齐填充","children":[]}]},{"level":2,"title":"对象的创建过程","slug":"对象的创建过程","link":"#对象的创建过程","children":[{"level":3,"title":"类加载检查","slug":"类加载检查","link":"#类加载检查","children":[]},{"level":3,"title":"为新生对象分配内存","slug":"为新生对象分配内存","link":"#为新生对象分配内存","children":[]},{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]}]},{"level":2,"title":"对象的访问方式","slug":"对象的访问方式","link":"#对象的访问方式","children":[{"level":3,"title":"句柄访问方式","slug":"句柄访问方式","link":"#句柄访问方式","children":[]},{"level":3,"title":"直接指针访问方式","slug":"直接指针访问方式","link":"#直接指针访问方式","children":[]}]}],"git":{"updatedTime":1684977570000,"contributors":[{"name":"杨立滨","username":"杨立滨","email":"szuyanglb@outlook.com","commits":4,"url":"https://github.com/杨立滨"},{"name":"yanglbme","username":"yanglbme","email":"szuyanglb@outlook.com","commits":15,"url":"https://github.com/yanglbme"},{"name":"杨立滨","username":"杨立滨","email":"contact@yanglibin.info","commits":1,"url":"https://github.com/杨立滨"},{"name":"Yang Libin","username":"Yang Libin","email":"szuyanglb@outlook.com","commits":2,"url":"https://github.com/Yang Libin"},{"name":"kenny","username":"kenny","email":"ue4sprite@gmail.com","commits":1,"url":"https://github.com/kenny"}],"changelog":[{"hash":"d04ea31f7afffc499ad57841838a8ac2d2e2e609","time":1684977570000,"email":"szuyanglb@outlook.com","author":"Yang Libin","message":"chore: add prettier config"},{"hash":"77803244fae0e977a878e00b83bb43c6b964a952","time":1684932560000,"email":"ue4sprite@gmail.com","author":"kenny","message":"docs: update jvm memory diagrams (#34)"},{"hash":"ffe36a875d09e4665fc0ebbaf221d4fe063d1804","time":1660099460000,"email":"szuyanglb@outlook.com","author":"Yang Libin","message":"chore: update image path"},{"hash":"87857bb363b31c6b3410e350ec4ea967d4d0f5b5","time":1623891916000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"chore: move images to root path"},{"hash":"b9ac90393daa17ac91f072406788d0320cd7ef97","time":1603199026000,"email":"yanglbme@users.noreply.github.com","author":"yanglbme","message":"docs: prettify code"},{"hash":"44141143eaf33a804d08844e6437b0dc4995261e","time":1586069633000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"feat: add docsify and pagination"},{"hash":"15106123780332a9ae661e9d4b8ae352e0bed39c","time":1546759880000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"docs: remove gitbook _config"},{"hash":"7259a066b4ffe6f2bc7cf5a5d74a461972409a64","time":1542376316000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"docs(img): change img path"},{"hash":"5812abcddf7be190ae25ff2f4fae537c1d75953c","time":1531985256000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Update index"},{"hash":"fc29eb9f65b88bdd5dd5dcb0cc2ef782e463ff3b","time":1531984929000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Add Index"},{"hash":"7a92c0e4989eb8136143d52d2281fb15257b44be","time":1531278268000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Write EOF"},{"hash":"918d757da112ddba6c3ac6c09542273c31f99674","time":1531055226000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Update 02-hotspot-jvm-object.md"},{"hash":"7016de0b3ecf6a080cf861f0ca3c91f14b9de906","time":1531047737000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Update 02-hotspot-jvm-object.md"},{"hash":"737011bb353a11ee64745820157079079ea868aa","time":1530973258000,"email":"szuyanglb@outlook.com","author":"杨立滨","message":"Update 02-hotspot-jvm-object.md"},{"hash":"44bb9a33ee01e13ffc8817d77cfee3fefb474161","time":1530252948000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Change path"},{"hash":"99ce82b1d8aa7c6e6451e108e35dfd958c05420c","time":1530186676000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Remove TOC"},{"hash":"a112cfd4f8cbd9de87c68112101c0ce4ed4a3fe5","time":1530183324000,"email":"contact@yanglibin.info","author":"杨立滨","message":"GitBook: [master] 12 pages modified"},{"hash":"26a1c453f8e4f2b56f07c9d36aae1959a1cf2e5f","time":1529933044000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Format doc style"},{"hash":"3d396e0a4b59619bbcbf24b383cbb1b0a858e136","time":1529914171000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Update format"},{"hash":"e7436bd325af1fb64abbeb4886609414a17f3327","time":1529912260000,"email":"szuyanglb@outlook.com","author":"yanglbme","message":"Rename filename"},{"hash":"3d947e91ee38e8f84c5d70f2da7708e126ec81c5","time":1529892998000,"email":"szuyanglb@outlook.com","author":"杨立滨","message":"Update 02_HotSpot虚拟机对象探秘.md"},{"hash":"7cfec118bcd71329438a571029dcbc9eeb8394ce","time":1529760375000,"email":"szuyanglb@outlook.com","author":"杨立滨","message":"Update 02_HotSpot虚拟机对象探秘.md"},{"hash":"68c30b3a0bac14d3fc951fc15ce039e31244b2e7","time":1529744953000,"email":"szuyanglb@outlook.com","author":"杨立滨","message":"Create 02_HotSpot虚拟机对象探秘.md"}]},"filePathRelative":"02-hotspot-jvm-object.md"}');export{m as comp,h as data};
